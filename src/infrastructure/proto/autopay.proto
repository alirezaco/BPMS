syntax = "proto3";

package autopay;

service AutopayService {
  rpc CreateProcess (CreateProcessRequest) returns (CreateProcessResponse) {}
  rpc UpdateProcess (UpdateProcessRequest) returns (UpdateProcessResponse) {}
  rpc DeleteProcess (DeleteProcessRequest) returns (DeleteProcessResponse) {}
  rpc GetProcess (GetProcessRequest) returns (GetProcessResponse) {}
  rpc ListProcesses (ListProcessesRequest) returns (ListProcessesResponse) {}
  rpc ListProcessesAdmin (ListProcessesAdminRequest) returns (ListProcessesAdminResponse) {}
  rpc CreateAutopay (CreateAutopayRequest) returns (CreateAutopayResponse) {}
  rpc UpdateAutopay (UpdateAutopayRequest) returns (UpdateAutopayResponse) {}
  rpc DeleteAutopay (DeleteAutopayRequest) returns (DeleteAutopayResponse) {}
  rpc GetAutopay (GetAutopayRequest) returns (GetAutopayResponse) {}
  rpc ListAutopays (ListAutopayRequest) returns (ListAutopayResponse) {}
  rpc ListAutopaysAdmin (ListAutopayAdminRequest) returns (ListAutopayAdminResponse) {}
  rpc ListAutopayActivity (ListAutopayActivityRequest) returns (ListAutopayActivityResponse) {}
  rpc CreateFile (CreateFileRequest) returns (CreateFileResponse) {}
}

// Common
message Meta {
  int32 status = 1;
  optional string message = 2;
}

message UISchema {
  string key = 1;
  string title = 2;
  string type = 4;
  optional string hint = 3;
  optional int32 min = 5;
  optional int32 max = 6;
  optional string regex = 7;
  optional string error_text = 8;
  optional bool is_required = 9;
  optional bool is_money = 10;
  optional bool is_english = 11;
  optional int32 weight = 12;
  optional string true_text = 13;
  optional string false_text = 14;
}

message DataParam {
  string source = 1;
  string key = 2;
  string source_key = 3;
}

message ComparisonStep {
  string func = 1;
  optional DataParam left = 2;
  optional DataParam right = 3;
  repeated ComparisonStep children = 4;
}

message GrpcStep {
  string service = 1;
  string package = 7;
  string method = 2;
  string protofile = 3;
  string url = 4;
  repeated DataParam metadata = 5;
  repeated DataParam payload = 6;
}

message ApiStep {
  string url = 1;
  string method = 2;
  repeated DataParam headers = 3;
  repeated DataParam params = 4;
  repeated DataParam bodies = 5;
  repeated DataParam queries = 6;
}

message Step {
  string name = 1;
  string type = 2;
  oneof oneof_data {
    ComparisonStep comparison = 3;
    GrpcStep grpc = 4;
    ApiStep api = 5;
  }
  optional bool is_sync = 6;
  optional string fail_step = 8;
  optional  bool is_final = 10;
  optional bool is_payment = 11;
  optional DataParam payment_param = 12;
}

message Process {
  string id = 11;
  string owner = 12;
  string created_at = 13;
  optional string updated_at = 14;
  optional string deleted_at = 15;
  optional string restore_at = 16;
  repeated string tags = 17;

  string name = 1;
  string service_name = 20;
  repeated string roles = 2;
  optional string default_fail_step = 3;
  optional bool allowed_direct_debit = 4;
  optional uint64 max_amount = 5;
  optional uint64 min_amount = 19;
  optional string period = 6;
  optional string cron = 7;
  repeated UISchema ui_schema = 8;
  repeated Step steps = 9;
  optional bool is_active = 18;
  string data = 10;
}

message ComparisonStepRequest {
  string func = 1;
  optional DataParam left = 2;
  optional DataParam right = 3;
  repeated ComparisonStepRequest children = 4;
}

message GrpcStepRequest {
  string service = 1;
  string package = 7;
  string method = 2;
  string protofile = 3;
  string url = 4;
  repeated DataParam metadata = 5;
  repeated DataParam payload = 6;
}

message ApiStepRequest {
  string url = 1;
  string method = 2;
  repeated DataParam headers = 3;
  repeated DataParam params = 4;
  repeated DataParam bodies = 5;
  repeated DataParam queries = 6;
}

message StepRequest {
  string name = 1;
  string type = 2;
  oneof oneof_data {
    ComparisonStepRequest comparison = 3;
    GrpcStepRequest grpc = 4;
    ApiStepRequest api = 5;
  }
  optional bool is_sync = 6;
  optional string fail_step = 8;
  optional bool is_final = 10;
  optional bool is_payment = 11;
  optional DataParam payment_param = 12;
}

message CreateProcessRequest {
  string name = 1;
  string service_name = 12;
  repeated string roles = 2;
  optional string default_fail_step = 3;
  optional bool allowed_direct_debit = 4;
  optional uint64 max_amount = 5;
  optional uint64 min_amount = 11;
  optional string period = 6;
  optional string cron = 7;
  repeated UISchema ui_schema = 8;
  repeated Step steps = 9;
  string data = 10;
}

message CreateProcessResponse {
  Meta meta = 1;
  optional Process data = 2;
}

message UpdateProcessRequest {
  string id = 1;
  optional string name = 2;
  optional string service_name = 14;
  repeated string roles = 3;
  optional string default_fail_step = 4;
  optional bool allowed_direct_debit = 5;
  optional uint64 max_amount = 6;
  optional uint64 min_amount = 13;
  optional string period = 7;
  optional string cron = 8;
  repeated UISchema ui_schema = 9;
  repeated Step steps = 10;
  optional string data = 11;
  optional bool is_active = 12;
}

message UpdateProcessResponse {
  Meta meta = 1;
  optional Process data = 2;
}

message DeleteProcessRequest {
  string id = 1;
}

message DeleteProcessResponse {
  Meta meta = 1;
  optional Process data = 2;
}

message GetProcessRequest {
  string id = 1;
}

message GetProcessResponse {
  Meta meta = 1;
  optional Process data = 2;
}

message Processes {
  string id = 11;
  string owner = 12;
  string created_at = 13;
  optional string updated_at = 14;
  optional string deleted_at = 15;
  optional string restore_at = 16;
  repeated string tags = 17;

  string name = 1;
  string service_name = 9;
  repeated string roles = 2;
  optional bool allowed_direct_debit = 4;
  optional uint64 max_amount = 5;
  optional uint64 min_amount = 8;
  optional string period = 6;
  optional string cron = 7;
  optional bool is_active = 18;
}

message ArrayProcess {
  int32 count = 1;
  repeated Processes rows = 2;
}

message ActiveProcess {
  string id = 1;
  string name = 2;
  string service_name = 3;
}

message ListProcessesRequest {
  int32 limit = 1;
  int32 skip = 2;
}

message ListProcessesResponse {
  Meta meta = 1;
  repeated ActiveProcess data = 2;
}

message ListProcessesAdminRequest {
  int32 limit = 2;
  int32 skip = 3;
  optional string name = 4;
  optional string service_name = 8;
  optional bool is_active = 5;
  repeated string roles = 6;
  optional bool allowed_direct_debit = 7;
}

message ListProcessesAdminResponse {
  Meta meta = 1;
  optional ArrayProcess data = 2;
}

message AutopayProcess {
  string id = 1;
  string name = 2;
  string service_name = 5;
}

message UserAutopay {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string phone = 4;
}

message Autopay {
  string id = 1;
  string owner = 2;
  string created_at = 3;
  optional string updated_at = 4;
  optional string deleted_at = 5;
  optional string restore_at = 6;
  repeated string tags = 7;

  string name = 8;
  string user_id = 18;
  string process_id = 9;
  optional uint64 max_amount = 10;
  optional uint64 min_amount = 22;
  string period = 11;
  optional string cron = 12;
  bool allowed_direct_debit = 13;
  string data = 14;
  bool is_active = 15;
  string last_run_at = 16;
  string processing_status = 17;
  string metadata = 23;
  repeated UISchema ui_schema = 19;
  optional AutopayProcess process = 20;
  optional UserAutopay user = 21;
}

message CreateAutopayRequest {
  string name = 1;
  string process_id = 3;
  optional uint64 max_amount = 4;
  optional uint64 min_amount = 10;
  optional string period = 5;
  optional string cron = 6;
  optional bool allowed_direct_debit = 7;
  string data = 8;
  string metadata = 9;
}

message CreateAutopayResponse {
  Meta meta = 1;
  optional Autopay data = 2;
}

message UpdateAutopayRequest {
  string id = 1;
  optional string name = 2;
  optional uint64 max_amount = 4;
  optional uint64 min_amount = 11;
  optional string period = 5;
  optional string cron = 6;
  optional bool allowed_direct_debit = 7;
  optional string data = 8;
  optional bool is_active = 9;
  optional string metadata = 10;
}

message UpdateAutopayResponse {
  Meta meta = 1;
  optional Autopay data = 2;
}

message DeleteAutopayRequest {
  string id = 1;
}

message DeleteAutopayResponse {
  Meta meta = 1;
  optional Autopay data = 2;
}

message GetAutopayRequest {
  string id = 1;
}

message GetAutopayResponse {
  Meta meta = 1;
  optional Autopay data = 2;
}

message Autopays {
  string id = 1;
  string name = 2;
  string service_name = 5;
  int32 count = 3;
  repeated Autopay values = 4;
}

message ArrayAutopay {
  int32 count = 1;
  repeated Autopays rows = 2;
}

message ListAutopayRequest {
  int32 limit = 1;
  int32 skip = 2;
  optional string process_id = 3;
}

message ListAutopayResponse {
  Meta meta = 1;
  optional ArrayAutopay data = 2;
}

message ListAutopayAdminRequest {
  int32 limit = 1;
  int32 skip = 2;
  optional string name = 3;
  optional string process_id = 4;
  optional string status = 5;
  optional string user_id = 6;
  optional string period = 7;
  optional bool allowed_direct_debit = 8;
  optional bool is_active = 9;
}

message ArrayAutopays {
  int32 count = 1;
  repeated Autopay rows = 2;
}

message ListAutopayAdminResponse {
  Meta meta = 1;
  optional ArrayAutopays data = 2;
}

message ActivityAutopay {
  string id = 1;
  string name = 2;
}

message ActivityProcess {
  string id = 1;
  string name = 2;
  string service_name = 5;
}

message AutopayActivity {
  string id = 11;
  string owner = 12;
  string created_at = 13;
  optional string updated_at = 14;
  optional string deleted_at = 15;
  optional string restore_at = 16;
  repeated string tags = 17;

  string autopay_id = 4;
  string process_id = 5;
  string status = 6;
  uint32 running_time = 7;
  repeated string successful_steps = 8;
  repeated string failed_steps = 9;
  optional bool has_payment = 10;
  optional uint64 payment_amount = 19;
  optional ActivityProcess process = 20;
  optional ActivityAutopay autopay = 21;
  optional UserAutopay user = 22;
}

message ArrayAutopayActivity {
  int32 count = 1;
  repeated AutopayActivity rows = 2;
}

message ListAutopayActivityRequest {
  optional string autopay_id = 1;
  optional string process_id = 4;
  optional string status = 5;
  optional string start_date = 6;
  optional string end_date = 7;
  optional bool has_payment = 8;
  int32 limit = 2;
  int32 skip = 3;
}

message ListAutopayActivityResponse {
  Meta meta = 1;
  optional ArrayAutopayActivity data = 2;
}

message File {
  string id = 1;
  string owner = 2;
  string created_at = 3;
  optional string updated_at = 4;
  optional string deleted_at = 5;
  optional string restore_at = 6;
  repeated string tags = 7;

  string name = 8;
  string value = 9;
}

message CreateFileRequest {
  string name = 1;
  string value = 2;
}

message CreateFileResponse {
  Meta meta = 1;
  optional File data = 2;
}