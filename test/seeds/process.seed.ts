import { ProcessSchema } from 'domain/models';
import { SeedInterface } from '../interfaces';
import { Types } from 'mongoose';
import { SourceEnum } from 'infrastructure/enum';

export const processSeed: SeedInterface<ProcessSchema> = {
  collection: ProcessSchema.name,
  data: [
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa20e1'),
      created_at: new Date('2022-12-10T09:54:19.000Z'),
      updated_at: new Date('2023-08-25T17:27:16.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa20e2'),
      name: 'Tresom',
      roles: ['user'],
      allowed_direct_debit: false,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20e3'),
          name: 'Y-Solowarm',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20e4'),
          name: 'Asoka',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20e5'),
          name: 'Lotstring',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20e6'),
          name: 'Alphazap',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20e7'),
          name: 'Zathin',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa20e8'),
      created_at: new Date('2023-03-22T08:42:18.000Z'),
      updated_at: new Date('2023-05-08T13:53:12.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa20e9'),
      name: 'Solarbreeze',
      roles: ['employee'],
      allowed_direct_debit: false,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20ea'),
          name: 'Overhold',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20eb'),
          name: 'Biodex',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20ec'),
          name: 'Voyatouch',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20ed'),
          name: 'Vagram',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20ee'),
          name: 'Matsoft',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa20ef'),
      created_at: new Date('2023-02-24T11:22:08.000Z'),
      updated_at: new Date('2023-06-10T09:35:52.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa20f0'),
      name: 'Stringtough',
      roles: ['user'],
      allowed_direct_debit: true,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20f1'),
          name: 'Cardguard',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20f2'),
          name: 'Ventosanzap',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20f3'),
          name: 'Zontrax',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa20f4'),
      created_at: new Date('2023-09-06T16:58:35.000Z'),
      updated_at: new Date('2023-02-03T04:13:22.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa20f5'),
      name: 'Bigtax',
      roles: ['merchant'],
      allowed_direct_debit: true,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20f6'),
          name: 'Zamit',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20f7'),
          name: 'Viva',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20f8'),
          name: 'Trippledex',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20f9'),
          name: 'Namfix',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20fa'),
          name: 'Wrapsafe',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20fb'),
          name: 'Fixflex',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa20fc'),
      created_at: new Date('2023-05-16T13:01:35.000Z'),
      updated_at: new Date('2023-01-24T06:46:38.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa20fd'),
      name: 'Solarbreeeeeze',
      roles: ['user'],
      allowed_direct_debit: true,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20fe'),
          name: 'Stringtough',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa20ff'),
          name: 'Stringtough',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa2100'),
      created_at: new Date('2022-12-18T05:59:37.000Z'),
      updated_at: new Date('2023-12-11T12:57:47.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa2101'),
      name: 'Fix San',
      roles: ['merchant'],
      allowed_direct_debit: false,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2102'),
          name: 'Konklab',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2103'),
          name: 'Aerified',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2104'),
          name: 'It',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2105'),
          name: 'Tin',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2106'),
          name: 'Holdlamis',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa2107'),
      created_at: new Date('2023-09-22T17:07:12.000Z'),
      updated_at: new Date('2023-06-14T21:36:47.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa2108'),
      name: 'Sonair',
      roles: ['employee'],
      allowed_direct_debit: false,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2109'),
          name: 'Tresom',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa210a'),
          name: 'Lotlux',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa210b'),
          name: 'Viva',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa210c'),
      created_at: new Date('2023-03-25T05:34:29.000Z'),
      updated_at: new Date('2023-01-07T16:40:48.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa210d'),
      name: 'Stim',
      roles: ['user'],
      allowed_direct_debit: true,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa210e'),
          name: 'Voltsillam',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa210f'),
          name: 'Konklux',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2110'),
          name: 'Alphazap',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2111'),
          name: 'Stim',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2112'),
          name: 'Wrapsafe',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa2113'),
      created_at: new Date('2023-04-09T12:33:57.000Z'),
      updated_at: new Date('2023-06-15T11:13:30.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa2114'),
      name: 'Tampflex',
      roles: ['employee'],
      allowed_direct_debit: true,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2115'),
          name: 'Bitwolf',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2116'),
          name: 'Latlux',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2117'),
          name: 'Stronghold',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2118'),
          name: 'Otcom',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa2119'),
          name: 'Flowdesk',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa211a'),
          name: 'Y-find',
          type: 'comparison' as any,
          is_payment: true,
          payment_param: {
            source: 'process' as any,
            key: 'amount',
            source_key: 'amount',
          },
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
    {
      _id: new Types.ObjectId('657ac17efc13ae364bfa211b'),
      created_at: new Date('2023-11-27T20:19:06.000Z'),
      updated_at: new Date('2023-06-27T19:09:13.000Z'),
      owner: new Types.ObjectId('657ac17efc13ae364bfa211c'),
      name: 'Fintone',
      roles: ['employee'],
      allowed_direct_debit: true,
      period: 'day' as any,
      validation_data: {
        type: 'object',
        properties: { name: { type: 'string' } },
      },
      ui_schema: [{ key: 'name', title: 'name', type: 'String' }],
      data: { amount: 5200 },
      service_name: 'test',
      is_active: true,
      steps: [
        {
          _id: new Types.ObjectId('657ac17efc13ae364bfa211d'),
          name: 'Bitwolf',
          type: 'comparison' as any,
          is_payment: false,
          payment_param: null,
          comparison: {
            func: 'eq' as any,
            left: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            right: {
              source: SourceEnum.AUTO_PAY,
              key: 'name',
              source_key: 'name',
            },
            children: [],
          },
        },
      ],
    },
  ],
};
